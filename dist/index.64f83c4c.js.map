{"mappings":"AAAA,MAAM,CAAC,CAAC,GAAC,MAAM,CAAC,MAAM,GAAG,SAAU,eAAe,EAAE;IAChD,gEAAgE;IAChE,IAAI,QAAQ,AAAC;IACb,IAAI,OAAO,eAAe,KAAK,CAAC,MAAM,CAAC,EACnC,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;SACnD,IAAI,eAAe,YAAY,KAAK,EACvC,QAAQ,GAAG,eAAe,CAAC;IAE/B,OAAO;QACH,MAAM,EAAE,eAAe,CAAC,MAAM;QAE9B,QAAQ,EAAC,SAAS,EAAE;YACf,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;gBACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,AAAC;gBAC5B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;aACpC;YACD,OAAO,IAAI,CAAC;SACf;QAEF,IAAI,EAAC,QAAQ,EAAE;YACV,IAAI,KAAK,GAAG,EAAE,AAAC;YACf,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;gBACrC,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBACpE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACpC;YACD,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;YAEpB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;QACrB,WAAK;QACL,gCAAgC;QAChC,iBAAiB;SACnB;QAEF,GAAG,EAAC,QAAQ,EAAE;YACV,uCAAuC;YACvC,gCAAgC;YAChC,YAAY;YACP,OAAO,IAAI,CAAC,MAAM,CAAC;QACxB,KAAK;QACL,2BAA2B;SAC7B;QAEF,WAAW;QACX,0BAA0B;QAC1B,IAAI;QAEJ,IAAI,EAAC,EAAE,EAAE;YACL,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,CACpC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;YAE/B,OAAO,IAAI,CAAC;SACf;QAED,MAAM,IAAG;YACL,MAAM,KAAK,GAAG,EAAE,AAAC;YACjB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAK;gBAChB,IAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,KAAG,EAAE,EAClC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAEnC,CAAC,CAAC;YACH,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;YACpB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;SACxB;QAED,MAAM,IAAG;YACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACzB;QACD,QAAQ,IAAE;YACN,MAAM,KAAK,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG;gBAClB,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC;aAC3B,CAAC;YACF,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;SACxB;KAGJ,CAAA;CACJ","sources":["Dom/dom-2/src/jquery.js"],"sourcesContent":["window.$=window.jQuery = function (selectorOrArray) {\r\n    // const elements = document.querySelectorAll(selectorOrArray );\r\n    let elements;\r\n    if (typeof selectorOrArray === `string`) {//判断elements是否是字符串；\r\n        elements = document.querySelectorAll(selectorOrArray);\r\n    } else if (selectorOrArray instanceof Array) {//判断是否是数组;\r\n        elements = selectorOrArray;\r\n    }\r\n    return {\r\n        oldApi: selectorOrArray.oldApi,\r\n\r\n        addClass(className) {\r\n             for (let i = 0; i < elements.length; i++){\r\n                 const element = elements[i];\r\n                 element.classList.add(className);\r\n             }\r\n             return this;\r\n         },\r\n         \r\n        find(selector) {\r\n             let array = [];\r\n             for (let i = 0; i < elements.length; i++){\r\n                 const elements2 = Array.from(elements[i].querySelectorAll(selector))\r\n                 array = array.concat(elements2);\r\n            }\r\n            array.oldApi = this;\r\n\r\n            return jQuery(array);\r\n            //等于：\r\n            // const newApi = jQuery(array);\r\n            // return newApi;\r\n         },\r\n        \r\n        end(selector) {\r\n            //  if (typeof selector === `string`) {\r\n            //      return jQuery(selector);\r\n            //  } else {\r\n                 return this.oldApi;\r\n            //  }\r\n            // return jQuery(selector);\r\n         },\r\n\r\n        //  end() {\r\n        //     return this.oldApi;\r\n        // }\r\n         \r\n        each(fn) {\r\n            for (let i = 0; i < elements.length; i++){\r\n                fn.call(null,elements[i],i)\r\n            }\r\n            return this;\r\n        },\r\n\r\n        parent() {\r\n            const array = [];\r\n            this.each((node) => {\r\n                if(array.indexOf(node.parentNode)===-1){\r\n                    array.push(node.parentNode);\r\n                }\r\n            });\r\n            array.oldApi = this;\r\n            return jQuery(array);\r\n        },\r\n        \r\n        printf() {\r\n            console.log(elements);\r\n        },\r\n        children(){\r\n            const array = []\r\n            this.each((node)=>{\r\n            array.push(...node.children)\r\n            })\r\n            return jQuery(array);\r\n        },\r\n        \r\n\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"index.64f83c4c.js.map","sourceRoot":"/__parcel_source_root/"}